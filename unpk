#!/bin/bash

#
#  UNPacK script
#  Part of EasyPK distribution
#  Written by Minoru <eual tod jp ta gmail tod com> (substitute "tod" with "."
#  and "ta" with "@")
#

help() {
    echo "USAGE: `basename $0` [ -h ] | [-d] file1 [file2 [file3 ...]]"
    echo "Supported archive formats is: tar, tar.bz2, tar.gz, bz2, gz, 7z, zip, rar."
    echo "-h  --  show this note"
    echo "-d  --  delete archive after unpacking"
}

# exit with code 3 if Ctrl+C has been pressed or any other terminating signal
#  has been sent
trap "exit 3" KILL TERM HUP INT

prepareTmp() {
    # prepares temp directory

    tmp="`echo $$ | base64 | sed 's/[^[:alpha:]]//g'`"
    mkdir "$tmp" && cd "$tmp"
}

clearTmp() {
    # clearTmp type_of_archive name_of_archive

    name="`basename "$2" .$1`"

    if [ "`/bin/ls -l | wc -l`" -eq "2" ]
    then
        # if there are only one in the directory...
        rm -rf ../"`/bin/ls`"
        mv * ..
        cd ..
        rmdir "$tmp"
    else
        cd ..
        rm -rf "$name"
        mv "$tmp" "$name"
    fi
}

#Initializing variables
tmp=""
deleteAfter=false
unpkSuccess=false

# checking options
while getopts ":hd" option
do
    case $option in
        h)
            help
            exit
        ;;

        d)
            deleteAfter=true
        ;;
    esac
done
shift $(($OPTIND - 1))

if [ -z "$*" ]
then
    echo "Specify files to unpack please. See `basename $0` -h for details."
    exit 2
fi

# checking for pv
if command -v pv &>/dev/null
then
    pv_avaliable=true
else
    pv_avaliable=false
    echo "Warning: pv not found. Please install it for displaying nice progress bars, speed and estimated time while packing."
fi

while [ -n "$1" ]
do
    case $1 in
        *.tar)
            prepareTmp

            if [ $pv_avaliable == true ]
            then
                echo "$1:"
                pv -- "../$1" | tar xf -
            else
                tar xvf "../$1"
            fi

            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi

            clearTmp "tar" "$1"
            ;;


        *.tar.bz2|*.tbz|*.tbz2)
            prepareTmp

            if [ $pv_avaliable == true ]
            then
                echo "$1:"
                pv -- "../$1" | bunzip2 -c | tar xf -
            else
                tar xjvf "../$1"
            fi

            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi

            case $1 in
                *.tar.bz2) clearTmp "tar.bz2" "$1" ;;
                *.tbz)     clearTmp "tbz" "$1" ;;
                *.tbz2)    clearTmp "tbz2" "$1" ;;
            esac
            ;;

    
        *.tar.gz|*.tgz)
            prepareTmp

            if [ $pv_avaliable == true ]
            then
                echo "$1:"
                pv -- "../$1" | gunzip -c | tar xf -
            else
                tar xzvf "../$1"
            fi
 
            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi
           
            case $1 in
                *.tar.gz) clearTmp "tar.gz" "$1" ;;
                *.tgz)    clearTmp "tgz" "$1" ;;
            esac
            ;;


        *.bz2)
            out="${1%%.bz2}"
            if [ $pv_avaliable == true ]
            then
                echo "$1:"
                pv -- "$1" | bunzip2 -c - >"$out"
            else
                bunzip2 -cv "$1" >"$out"
            fi

            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi
            ;;


        *.gz)
            out="${1%%.gz}"
            if [ $pv_avaliable == true ]
            then
                echo "$1:"
                pv -- "$1" | gunzip -c - >"$out"
            else
                gunzip -cv "$1" >"$out"
            fi

            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi
            ;;


        *.7z)
            prepareTmp

            7z x -- "../$1"

            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi

            clearTmp "7z" "$1"
            ;;


        *.zip)
            prepareTmp

            7z x -- "../$1"

            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi

            clearTmp "zip" "$1"
            ;;


        *.rar)
            prepareTmp

            rar x -- "../$1"

            if [ "$?" == "0" ]
            then
                unpkSuccess=true
            fi

            clearTmp "rar" "$1"
            ;;


        *)
            echo "Can't recognize format of '$1'. See `basename $0` -h for details."
            exit 1
            ;;
    esac

    $deleteAfter && $unpkSuccess && rm "$1"

    shift
done

